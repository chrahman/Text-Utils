{"version":3,"sources":["components/logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","src","logo","alt","type","id","home","value","color","onChange","chooseColor","onClick","toggleMode","htmlFor","Textform","useState","text","setText","heading","event","target","rows","toUpperCase","showAlert","toLowerCase","replace","trim","el","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","defaultProps","home_url","App","setmode","setalert","setcolor","message","setTimeout","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a7ae363.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from './logo.svg';\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\"><img src={logo} alt=\"\" /></a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.home}</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">About</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/\">Contact us</a>\r\n                </li>\r\n                </ul>\r\n                <input className=\"me-3\" type=\"color\" value={props.color} onChange={props.chooseColor} />\r\n\r\n                <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n                    <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    home: PropTypes.string,\r\n    home_url: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    home: \"Home Text\",\r\n    home_url: \"home url\"\r\n\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    // CONVERT TO UPERCASE\r\n    const handleUperCase = ()=> {\r\n        // console.log(\"Btn is clicked\");\r\n        // let newText = text.toUpperCase();\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"success\", \"Text is Converted in Upercase\")\r\n    }\r\n\r\n    // convert to lower case\r\n    const handleLowerCase = ()=> {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"success\", \"Text is Converted in Lowercase\")\r\n    }\r\n\r\n    // Remove Extra Spaces\r\n    const removeExtraSpaces = ()=> {\r\n        setText(text.replace(/\\s+/g, ' ').trim());\r\n        props.showAlert(\"success\", \"Extra Spaces are removed\")\r\n    }\r\n\r\n    // Clear Text\r\n    const handleClear = ()=> {\r\n        setText(\"\");\r\n        props.showAlert(\"success\", \"Text Form is Cleared\")\r\n    }\r\n\r\n    // Copy Text\r\n    const copyText = ()=> {\r\n        const el = document.getElementById(\"FormControlTextarea1\");\r\n        el.select();\r\n        navigator.clipboard.writeText(el.value);\r\n        props.showAlert(\"success\", \"Text is copied to clipboard\")\r\n    }\r\n\r\n    \r\n\r\n    const handleOnChange = (event)=> {\r\n        setText(event.target.value);\r\n        // console.log(\"On Change is fired\");\r\n    }\r\n\r\n    let [text, setText] = useState(\"\");\r\n    return (\r\n        <div className={`my-3 container text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <h1>{props.heading}</h1>\r\n            <textarea className={`form-control my-3 bg-${props.mode} text-${props.mode === 'light'?'dark':'light'}`} value={text} onChange={handleOnChange} id=\"FormControlTextarea1\" rows=\"6\"></textarea>\r\n            <div className=\"d-flex\">\r\n                <div className=\"flex-fill\">\r\n                    <button className=\"btn btn-primary\" onClick={handleUperCase} >Convert to Upercase</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={handleLowerCase} >Convert to Lowercase</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={removeExtraSpaces} >Remove Extra Spaces</button>\r\n                </div>\r\n                <div className=\"flex-fill text-end\">\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={handleClear} >Clear Text</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={copyText} >Copy Text</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <h2>Your Text Summary</h2>\r\n                <p><b>{text.split(\" \").length - 1}</b> Words & <b>{text.length}</b> Charecters</p>\r\n                <h2>Time to read</h2>\r\n                <p>Estimate time to read this text is <b>{0.5 * text.split(\" \").length - 0.5}</b> Sec</p>\r\n                <h2>Text Preview</h2>\r\n                <p>{text.length>0?text: \"Enter Text to preview here\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && \r\n        <div className=\"position-relative\">\r\n        <div className={`alert alert-${props.alert.type} position-absolute top-100 start-50 translate-middle text-capitalize text-center alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}:</strong> {props.alert.msg}\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(\"\");\n  const [color, setcolor] = useState(\"\")\n\n  const showAlert = (type, message)=> {\n    setalert({\n      type: type,\n      msg: message\n    });\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  const chooseColor = (event)=> {\n    setcolor(event.target.value);\n  }\n  const toggleMode = ()=> {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = color;\n      document.body.style.color = \"#000 !important\";\n      showAlert(\"success\", \"Dark Mode hase been enabled\")\n    }\n    else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      document.body.style.color = \"#fff !important\";\n      showAlert(\"success\", \"Light Mode hase been enabled\")\n    }\n  }\n\n  return (\n    // <Router>\n      <div className=\"App\">\n        <Navbar home=\"Home\" mode={mode} toggleMode={toggleMode} color={color} chooseColor={chooseColor} />\n        <Alert alert={alert}/>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter Any Text To Analyz\" mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>      \n    // </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}