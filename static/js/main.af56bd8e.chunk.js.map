{"version":3,"sources":["components/About.js","components/logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","backgroundColor","color","border","mystyle","setMyStyle","btnControl","setBtnText","style","className","id","type","onClick","Navbar","props","mode","href","src","logo","alt","home","value","onChange","chooseColor","toggleMode","htmlFor","Textform","text","setText","heading","event","target","rows","toUpperCase","showAlert","toLowerCase","replace","trim","el","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","msg","defaultProps","home_url","App","setmode","setalert","setcolor","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af56bd8e.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [mystyle, setMyStyle] = useState(\r\n        {\r\n            backgroundColor: \"white\",\r\n            color: \"black\",\r\n            border: \"1px solid white\"\r\n        }\r\n    );\r\n    const [btnControl, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const toggledark = ()=> {\r\n        if (mystyle.color === \"black\") {\r\n            setMyStyle({\r\n                backgroundColor: \"black\",\r\n                color: \"white\",\r\n                border: \"1px solid white\"\r\n            })\r\n            setBtnText(\"Disable Dark Mode\");\r\n        }\r\n        else {\r\n            setMyStyle({\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                border: \"1px solid white\"\r\n            })\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={mystyle}>\r\n            <div className=\"accordion container my-3\" id=\"accordionExample\">\r\n                <h2>About us</h2>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button style={mystyle} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div style={mystyle} className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button style={mystyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div style={mystyle} className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button style={mystyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div style={mystyle} className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                    <button className=\"btn btn-primary my-3\" type=\"button\" onClick={toggledark}>{btnControl}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport logo from './logo.svg';\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\"><img src={logo} alt=\"\" /></a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.home}</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/about\">About</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/\">Contact us</a>\r\n                </li>\r\n                </ul>\r\n                <input className=\"me-3\" type=\"color\" value={props.color} onChange={props.chooseColor} />\r\n\r\n                <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n                    <input onClick={props.toggleMode} className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    home: PropTypes.string,\r\n    home_url: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    home: \"Home Text\",\r\n    home_url: \"home url\"\r\n\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    // CONVERT TO UPERCASE\r\n    const handleUperCase = ()=> {\r\n        // console.log(\"Btn is clicked\");\r\n        // let newText = text.toUpperCase();\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"success\", \"Text is Converted in Upercase\")\r\n    }\r\n\r\n    // convert to lower case\r\n    const handleLowerCase = ()=> {\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"success\", \"Text is Converted in Lowercase\")\r\n    }\r\n\r\n    // Remove Extra Spaces\r\n    const removeExtraSpaces = ()=> {\r\n        setText(text.replace(/\\s+/g, ' ').trim());\r\n        props.showAlert(\"success\", \"Extra Spaces are removed\")\r\n    }\r\n\r\n    // Clear Text\r\n    const handleClear = ()=> {\r\n        setText(\"\");\r\n        props.showAlert(\"success\", \"Text Form is Cleared\")\r\n    }\r\n\r\n    // Copy Text\r\n    const copyText = ()=> {\r\n        const el = document.getElementById(\"FormControlTextarea1\");\r\n        el.select();\r\n        navigator.clipboard.writeText(el.value);\r\n        props.showAlert(\"success\", \"Text is copied to clipboard\")\r\n    }\r\n\r\n    \r\n\r\n    const handleOnChange = (event)=> {\r\n        setText(event.target.value);\r\n        // console.log(\"On Change is fired\");\r\n    }\r\n\r\n    let [text, setText] = useState(\"\");\r\n    return (\r\n        <div className={`my-3 container text-${props.mode === 'light'?'dark':'light'}`}>\r\n            <h1>{props.heading}</h1>\r\n            <textarea className={`form-control my-3 bg-${props.mode} text-${props.mode === 'light'?'dark':'light'}`} value={text} onChange={handleOnChange} id=\"FormControlTextarea1\" rows=\"6\"></textarea>\r\n            <div className=\"d-flex\">\r\n                <div className=\"flex-fill\">\r\n                    <button className=\"btn btn-primary\" onClick={handleUperCase} >Convert to Upercase</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={handleLowerCase} >Convert to Lowercase</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={removeExtraSpaces} >Remove Extra Spaces</button>\r\n                </div>\r\n                <div className=\"flex-fill text-end\">\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={handleClear} >Clear Text</button>\r\n                    <button className=\"ms-2 btn btn-primary\" onClick={copyText} >Copy Text</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"my-3\">\r\n                <h2>Your Text Summary</h2>\r\n                <p><b>{text.split(\" \").length - 1}</b> Words & <b>{text.length}</b> Charecters</p>\r\n                <h2>Time to read</h2>\r\n                <p>Estimate time to read this text is <b>{0.5 * text.split(\" \").length - 0.5}</b> Sec</p>\r\n                <h2>Text Preview</h2>\r\n                <p>{text.length>0?text: \"Enter Text to preview here\"}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && \r\n        <div className=\"position-relative\">\r\n        <div className={`alert alert-${props.alert.type} position-absolute top-100 start-50 translate-middle text-capitalize text-center alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}:</strong> {props.alert.msg}\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(\"\");\n  const [color, setcolor] = useState(\"\")\n\n  const showAlert = (type, message)=> {\n    setalert({\n      type: type,\n      msg: message\n    });\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  const chooseColor = (event)=> {\n    setcolor(event.target.value);\n  }\n  const toggleMode = ()=> {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = color;\n      document.body.style.color = \"#000 !important\";\n      showAlert(\"success\", \"Dark Mode hase been enabled\")\n    }\n    else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"#fff\";\n      document.body.style.color = \"#fff !important\";\n      showAlert(\"success\", \"Light Mode hase been enabled\")\n    }\n  }\n\n  return (\n    // <Router>\n      <div className=\"App\">\n        <Navbar home=\"Home\" mode={mode} toggleMode={toggleMode} color={color} chooseColor={chooseColor} />\n        <Alert alert={alert}/>\n        {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter Any Text To Analyz\" mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n            <About />\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div>      \n    // </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}